import { useContext, useState } from "react";import "./Register.css";import axios from "axios";import { NavLink, useNavigate } from "react-router-dom";import { AuthContext } from "../../context/AuthContext";const VerifyOTP = () => {  const apiUrl = import.meta.env.VITE_API_URL;  const { registerData, setRefreshAuthContext } = useContext(AuthContext);  const [OTP, setOTP] = useState("");  const [isWaiting, setIsWaiting] = useState(false);  const navigate = useNavigate();  const handleInputChange = (e) => {    setOTP(e.target.value);  };  const handleRegister = (e) => {    e.preventDefault();    setIsWaiting(true);    axios      .post(        `${apiUrl}/api/v1/auth/verifyRegistrationOTP`,        { email: registerData.email, otp: parseInt(OTP) },        {          withCredentials: true,        }      )      .then((res) => {        if (res.data.success === true) {          setIsWaiting(false);          setRefreshAuthContext((prev) => !prev);          navigate("/dashboard");        }      })      .catch((err) => {        setIsWaiting(false);        console.log(err.response?.data?.message || "Registration error");        if (err.response?.data?.message === "Verification Code already sent") {        }      });  };  return (    <div className="register-container">      <div className="register-left">        <div className="register-static-container">          <div className="register-heading">Register</div>          <p className="register-message">Verify your OTP below</p>        </div>        <form className="register-form" onSubmit={handleRegister}>          <input type="number" className="register-input" value={OTP} name="OTP" autoFocus onChange={handleInputChange} />          <button type="submit" className={`register-button ${isWaiting && "wait"}`}>            Verify OTP          </button>        </form>      </div>      <div className="register-right">        <h1 className="register-logo">ðŸ“š BookWorm</h1>        <p className="register-tagline">Already have an account?</p>        <NavLink className="register-navlink" to="/login">          Login        </NavLink>      </div>    </div>  );};export default VerifyOTP;