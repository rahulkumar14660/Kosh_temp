import React, { useContext, useState } from "react";import Sidebar from "../../components/layout/Sidebar";import "./Profile.css";import { UserContext } from "../../context/UserContext";import { AuthContext } from "../../context/AuthContext";import axios from "axios";import { useNavigate } from "react-router-dom";const Profile = () => {  const apiUrl = import.meta.env.VITE_API_URL;  const { user } = useContext(AuthContext);  const { setUserContextUpdated } = useContext(UserContext);  const navigate = useNavigate();  const [showConfirm, setShowConfirm] = useState(false);  const handleLogout = async () => {    try {      await axios.get(`${apiUrl}/api/v1/auth/logout`, {        withCredentials: true,      });      setUserContextUpdated((prev) => !prev);      navigate("/login");    } catch (err) {      console.error("Logout failed:", err);    }  };  const formattedDate = new Date(user?.createdAt).toLocaleDateString();  return (    <div className="profile-container">      <Sidebar />      <main className="profile-main">        <div className="profile-card">          <div className="profile-header">            <div className="profile-avatar">              {user?.url ? <img src={user.url} alt="User Avatar" /> : <div className="avatar-fallback">{user?.name?.slice(0, 1).toUpperCase() || "U"}</div>}            </div>            <h2>{user?.name || "N/A"}</h2>            <p className="profile-role">{user?.role?.toUpperCase()}</p>          </div>          <div className="profile-details">            <p>              <strong>Email:</strong> {user?.email || "N/A"}            </p>            <p>              <strong>Joined:</strong> {formattedDate || "N/A"}            </p>          </div>          <div className="profile-btn">            <button className="logout-button" onClick={() => setShowConfirm(true)}>              Logout            </button>            <button className="change-pass-button" onClick={() => navigate("/change-password")}>              Change Password            </button>          </div>        </div>        {showConfirm && (          <div className="logout-modal-overlay">            <div className="logout-modal">              <p>Are you sure you want to logout?</p>              <div className="logout-buttons">                <button onClick={handleLogout}>Yes</button>                <button className="cancel" onClick={() => setShowConfirm(false)}>                  Cancel                </button>              </div>            </div>          </div>        )}      </main>    </div>  );};export default Profile;