import React, { useContext, useEffect, useState } from "react";import Sidebar from "../../components/layout/Sidebar";import "./AddNewAdmin.css";import axios from "axios";import { UserContext } from "../../context/UserContext";const AddNewAdmin = () => {  const apiUrl = import.meta.env.VITE_API_URL  const [data, setData] = useState({    name: "",    email: "",    password: "",    avatar: null,  });  const [error, setError] = useState("");  const [success, setSuccess] = useState("");  const { setUserContextUpdated } = useContext(UserContext);  const handleChange = (e) => {    setData({ ...data, [e.target.name]: e.target.value });    setError("");    setSuccess("");  };  const handleFileChange = (e) => {    setData({ ...data, avatar: e.target.files[0] });    setError("");    setSuccess("");  };  const handleSubmit = async (e) => {    e.preventDefault();    const formData = new FormData();    formData.append("name", data.name);    formData.append("email", data.email);    formData.append("password", data.password);    if (data.avatar) {      formData.append("avatar", data.avatar);    }    try {      await axios.post(`${apiUrl}/api/v1/user/add/newAdmin`, formData, {        withCredentials: true,        headers: {          "Content-Type": "multipart/form-data",        },      });      setSuccess("Admin added successfully!");      setData({ name: "", email: "", password: "", avatar: null });      setUserContextUpdated((prev) => !prev);    } catch (err) {      console.error(err);      setError("Failed to create admin. Please try again.");    }  };  return (    <div className="admin-container">      <Sidebar />      <main className="admin-main">        <form className="admin-form" onSubmit={handleSubmit}>          <div className="form-group">            <label>Name</label>            <input name="name" autoFocus type="text" value={data.name} onChange={handleChange} placeholder="Enter full name" required />          </div>          <div className="form-group">            <label>Email</label>            <input name="email" type="email" value={data.email} onChange={handleChange} placeholder="admin@example.com" required />          </div>          <div className="form-group">            <label>Password</label>            <input name="password" type="password" value={data.password} onChange={handleChange} placeholder="Enter a secure password" required />          </div>          <div className="form-group">            <label>Avatar</label>            <div className="custom-file-upload">              <label htmlFor="avatar">{data.avatar ? data.avatar.name : "Choose Avatar"}</label>              <input id="avatar" name="avatar" type="file" onChange={handleFileChange} required />            </div>          </div>          {error && <p className="form-error">{error}</p>}          {success && <p className="form-success">{success}</p>}          <div className="form-buttons">            <button type="submit">Add Admin</button>            <button type="button" className="cancel" onClick={() => setData({ name: "", email: "", password: "", avatar: null })}>              Reset            </button>          </div>        </form>      </main>    </div>  );};export default AddNewAdmin;