import cron from "node-cron";import { Borrow } from "../models/borrow.model.js";import { sendEmail } from "../utils/sendEmail.js";import { generateDueDateReminderTemplate } from "../utils/generateDueDateReminderTemplate.js";export const notifyUsers = () => {  cron.schedule("0 9 * * *", async () => {    try {      const tomorrow = new Date();      tomorrow.setDate(tomorrow.getDate() + 1);      tomorrow.setHours(0, 0, 0, 0);      const dayAfterTomorrow = new Date(tomorrow);      dayAfterTomorrow.setDate(dayAfterTomorrow.getDate() + 1);      const borrowers = await Borrow.find({        dueDate: {          $gte: tomorrow,          $lt: dayAfterTomorrow,        },        returnDate: null,        notified: false,      })        .populate("user")        .populate("book");      for (const borrower of borrowers) {        if (borrower.user?.email) {          await sendEmail({            email: borrower.user.email,            subject: `Your borrowed book is due tomorrow`,            message: generateDueDateReminderTemplate(borrower.user.name, borrower.book.title, borrower.dueDate),          });          borrower.notified = true;          await borrower.save();        }      }    } catch (error) {      console.error("Error in notifyUsers cron job:", error);    }  });};